#!/bin/bash
set -e

MODEL=$1
VERSION=18.06.2
BUILDDIR=/tmp/openwrt-build
BASE_PACKAGES=" \
  dropbear \
  prometheus-node-exporter-lua \
  prometheus-node-exporter-lua-nat_traffic \
  prometheus-node-exporter-lua-netstat \
  prometheus-node-exporter-lua-openwrt \
  prometheus-node-exporter-lua-wifi \
  prometheus-node-exporter-lua-wifi_stations \
  prometheus-node-exporter-lua-textfile \
  softflowd \
  tcpdump-mini \
  "

case $MODEL in
"f17gw")
  PLATFORM=ar71xx
  TYPE=generic
  TARGET_DEVICE=ar71xx-generic
  PROFILE=tl-wdr4300-v1
  EXTRA_PACKAGES="\
    bind-host \
    ca-bundle \
    ca-certificates \
    curl \
    ddns-scripts \
    dnsmasq \
    ip-full \
    ipset \
    iptables-mod-conntrack-extra \
    iptables-mod-ipopt \
    kmod-ipip \
    kmod-tun \
    libiwinfo-lua \
    libustream-openssl \
    luci-app-ddns \
    luci-app-firewall \
    luci-app-olsr \
    luci-app-olsr-services \
    luci-app-olsr-viz \
    luci-app-watchcat \
    luci-app-wireguard \
    luci-mod-admin-full \
    luci-proto-ipv6 \
    luci-proto-wireguard \
    luci-theme-bootstrap \
    olsrd \
    olsrd-mod-arprefresh \
    olsrd-mod-bmf \
    olsrd-mod-dot-draw \
    olsrd-mod-dyn-gw \
    olsrd-mod-dyn-gw-plain \
    olsrd-mod-httpinfo \
    olsrd-mod-jsoninfo \
    olsrd-mod-mdns \
    olsrd-mod-nameservice \
    olsrd-mod-netjson \
    olsrd-mod-p2pd \
    olsrd-mod-pgraph \
    olsrd-mod-txtinfo \
    olsrd-mod-watchdog \
    uhttpd \
    watchcat \
    wireguard-tools \
    wpad-mini \
    "
  REMOVED_PACKAGES="\
    -dnsmasq-full \
    -odhcpd-ipv6only \
    "
;;

"w16gw")
  PLATFORM=ramips
  TYPE=mt7621
  TARGET_DEVICE=ramips-mt7621
  PROFILE=ubnt-erx
  EXTRA_PACKAGES="\
    bind-host \
    ca-bundle \
    ca-certificates \
    curl \
    ddns-scripts \
    dnsmasq-full \
    ip-bridge \
    ip-full \
    kmod-gpio-pca953x \
    kmod-i2c-gpio-custom \
    kmod-tun \
    kmod-wireguard \
    libatomic libnl \
    libnl-core libnl-genl \
    libnl-nf libnl-route \
    libstdcpp uboot-envtools \
    libustream-openssl \
    lldpd iptables-mod-tee \
    luci \
    luci-app-adblock \
    luci-app-ddns \
    luci-app-firewall \
    luci-app-watchcat \
    luci-app-wireguard \
    luci-base \
    luci-base adblock \
    luci-mod-admin-full \
    luci-proto-ipv6 \
    luci-proto-ppp \
    luci-proto-wireguard \
    luci-theme-bootstrap \
    odhcp6c \
    openvpn-openssl \
    sqm-scripts \
    sqm-scripts-extra \
    tor \
    tor-geoip \
    wireguard \
    wireguard-tools \
  "
  REMOVED_PACKAGES="-dnsmasq -odhcpd"
;;

"nanostationm2")
  PLATFORM=ar71xx
  TYPE=generic
  TARGET_DEVICE=ar71xx-generic
  PROFILE=ubnt-nano-m
  EXTRA_PACKAGES="\
    curl \
    hostapd \
    ip-tiny \
    luci \
    luci-base \
    luci-theme-bootstrap \
    odhcp6c \
    "
  REMOVED_PACKAGES="-wpad-mini -wpa-supplicant -wpa-supplicant-mini"
;;

"ubnt-uap-pro") 
  PLATFORM=ar71xx
  TYPE=generic
  TARGET_DEVICE=ar71xx-generic
  PROFILE=ubnt-uap-pro
  EXTRA_PACKAGES="\
    curl \
    hostapd \
    ip-tiny \
    luci luci-base \
    luci-theme-bootstrap \
    odhcp6c \
    " 
  REMOVED_PACKAGES="-wpad-mini -wpa-supplicant -wpa-supplicant-mini"
;;

"nanobridge-m5") 
  PLATFORM=ar71xx
  TYPE=generic
  TARGET_DEVICE=ar71xx-generic
  PROFILE=ubnt-nano-m
  EXTRA_PACKAGES="\
    curl \
    wpa-supplicant \
    ip-tiny \
    luci luci-base \
    luci-theme-bootstrap \
    odhcp6c \
    " 
  REMOVED_PACKAGES="-wpad-mini"
;;

"mr33") 
  PLATFORM=ipq40xx
  TYPE=generic
  TARGET_DEVICE=ipq40xx
  PROFILE  eraki_mr33
  EXTRA_PACKAGES="\
    curl \
    hostapd \
    ip-tiny \
    luci \
    luci-base \
    luci-theme-bootstrap \
    odhcp6c \
    " 
  REMOVED_PACKAGES="-wpad-mini -wpa-supplicant -wpa-supplicant-mini"
;;

*)
  echo "specify build target (f17gw ; nanostationm2 ; nanobridge-m5 ; w16gw ; ubnt-uap-pro; mr33)"
  exit 1
;;
esac

if [ ! -d ${BUILDDIR} ] ; then
  mkdir ${BUILDDIR}
fi

# the need for $TYPE and $TARGET_DEVICE seems dumb but it helps get aroudn the problem of downloads        ↓↓↓↓↓↓↓
# http://downloads.openwrt.org/releases/18.06.1/targets/ar71xx/generic/openwrt-imagebuilder-18.06.1-ar71xx-generic.Linux-x86_64.tar.xz
#http://downloads.openwrt.org/releases/18.06.1/targets/ipq40xx/generic/openwrt-imagebuilder-18.06.1-ipq40xx.Linux-x86_64.tar.xz

if [ ! -d ${BUILDDIR}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64 ] ; then
  if [ ! -f ${BUILDDIR}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64.tar.xz ]; then
    (cd ${BUILDDIR} && curl -O https://downloads.openwrt.org/releases/${VERSION}/targets/${PLATFORM}/${TYPE}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64.tar.xz )
  fi
  tar xfJ ${BUILDDIR}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64.tar.xz -C ${BUILDDIR}/
fi

COMBINED_PACKAGE_LIST="`echo ${REMOVED_PACKAGES}` `echo ${BASE_PACKAGES}` `echo ${EXTRA_PACKAGES}`" 

( cd ${BUILDDIR}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64 && sudo make image PROFILE="$PROFILE" PACKAGES="$COMBINED_PACKAGE_LIST" )

echo "scp ${BUILDDIR}/openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64/bin/targets/${PLATFORM}/${TYPE}/openwrt-${VERSION}-${TARGET_DEVICE}-${PROFILE}-squashfs-sysupgrade.bin root@<dest>:/tmp"
